{"ast":null,"code":"var _jsxFileName = \"J:\\\\1.Project\\\\Python\\\\Web\\\\DjangoReact\\\\picted\\\\frontend\\\\src\\\\components\\\\ListArticle.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardGroup, Container, Button, NavItem, PageItem } from 'react-bootstrap';\nimport { Link, useParams } from 'react-router-dom';\nimport \"./ListArticle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListArticle() {\n  _s();\n\n  const [article, setArticle] = useState({});\n  const [thumbImg, setThumbImg] = useState([]);\n\n  function getArticle() {\n    axios.get(\"/api/article\").then(response => {\n      setArticle(response.data);\n    });\n    console.log(article);\n  }\n\n  function getUnsplash() {\n    var config = {\n      headers: {\n        \"Accept-Version\": \"v1\",\n        \"Authorization\": \"Client-ID b_oOP9fLWgawnVSEWkoWlHMzoGD7J3uOk4DLp8u9E0w\"\n      }\n    };\n    axios.get(\"https://api.unsplash.com/photos/random\", config).then(res => {\n      setThumbImg([...thumbImg, res.data.urls.small]);\n    });\n  }\n\n  function displayArticle(item) {\n    if (item.length > 0) {\n      let res = article.map(c => {\n        if (c.content.length > 180) {\n          var content = c.content.substring(0, 180) + \"...\";\n        } else {\n          var content = c.content;\n        }\n\n        console.log(thumbImg);\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/article/\" + c.id,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"tile\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: thumbImg[0],\n              alt: \"unsplah image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"text\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: [c.title, \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                class: \"animate-text\",\n                children: c.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"animate-text\",\n                children: content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this);\n      });\n      return res;\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"You don't have any articles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  useEffect(() => {\n    getArticle();\n\n    for (let x = 0; x < 2; x++) {\n      getUnsplash();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"wrap\",\n    children: displayArticle(article)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListArticle, \"ZjAbz1ZO8Bz2b1O3zwX9aslzWBE=\");\n\n_c = ListArticle;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListArticle\");","map":{"version":3,"sources":["J:/1.Project/Python/Web/DjangoReact/picted/frontend/src/components/ListArticle.jsx"],"names":["axios","React","useState","useEffect","Card","CardGroup","Container","Button","NavItem","PageItem","Link","useParams","ListArticle","article","setArticle","thumbImg","setThumbImg","getArticle","get","then","response","data","console","log","getUnsplash","config","headers","res","urls","small","displayArticle","item","length","map","c","content","substring","id","title","author","x"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useState, useEffect } from 'react'\nimport { Card, CardGroup, Container, Button, NavItem, PageItem } from 'react-bootstrap';\nimport { Link, useParams } from 'react-router-dom';\nimport \"./ListArticle.css\"\n\nexport default function ListArticle(){\n    const [article, setArticle] = useState({});\n    const [thumbImg, setThumbImg] = useState([]);\n\n\n    function getArticle(){\n        axios.get(\"/api/article\").then(response => {\n                setArticle(response.data);        \n        })\n        console.log(article)\n    }\n\n    function getUnsplash(){\n        var config ={\n            headers: {\n                \"Accept-Version\": \"v1\",\n                \"Authorization\": \"Client-ID b_oOP9fLWgawnVSEWkoWlHMzoGD7J3uOk4DLp8u9E0w\",\n            }\n        }\n        axios.get(\"https://api.unsplash.com/photos/random\", config)\n        .then(res=>{\n            setThumbImg([...thumbImg, res.data.urls.small])\n        })\n    }\n\n\n\n    function displayArticle(item){\n        if (item.length > 0){\n            let res = article.map(c => {\n                if(c.content.length > 180){\n                    var content = c.content.substring(0, 180)+\"...\" \n                }else{\n                    var content = c.content\n                }\n                console.log(thumbImg);\n                return(\n                    <Link to={\"/article/\" + c.id}>\n                        <div class=\"tile\"> \n                            {/* <img src={'https://source.unsplash.com/random?sig='+ c.id} alt=\"unsplah image\"/> */}\n                            <img src={thumbImg[0]} alt=\"unsplah image\"/>\n                            <div class=\"text\">\n                                <h1>{c.title}.</h1>\n                                <h2 class=\"animate-text\">{c.author}</h2>\n                                <p class=\"animate-text\">{content}</p>\n                            </div>\n                        </div> \n                    </Link>              \n                )\n            })\n            return res\n        }else{\n            return <h2>You don't have any articles</h2>\n        }\n    }\n\n    useEffect(() => {\n        getArticle()\n        for(let x = 0; x < 2; x++){\n            getUnsplash()\n        }\n    }, [])\n    return(\n        <div class=\"wrap\">\n            {displayArticle(article)}\n        </div>\n  \n\n\n    )\n}"]},"metadata":{},"sourceType":"module"}